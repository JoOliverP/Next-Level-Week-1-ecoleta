{"ast":null,"code":"var _jsxFileName = \"/home/j-dev/\\xC1rea de Trabalho/RocketSeat/NWL#1.0/web/src/pages/CreatePoint/index.tsx\",\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { FiArrowLeft } from 'react-icons/fi';\nimport { MapContainer, Marker, TileLayer, useMapEvents } from 'react-leaflet';\nimport axios from 'axios';\nimport api from '../../services/api';\nimport './styles.css';\nimport logo from \"../../assets/logo.svg\"; //array ou objeto : precisa informar o tipÃ³ da variavel\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreatePoint = () => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [items, setItems] = useState([]);\n  const [ufs, setUfs] = useState([]);\n  const [cities, setCities] = useState([]);\n  const [selectedUf, setSelectedUf] = useState('0');\n  const [selectedCity, setSelectedCity] = useState('0');\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    whatsapp: ''\n  });\n  const [initialPosition, setInitialPosition] = useState([0, 0]);\n  const [selectedPosition, setSelectedPosition] = useState([0, 0]);\n  const history = useHistory();\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(position => {\n      console.log(position);\n    });\n  }, []);\n  useEffect(() => {\n    api.get('items').then(response => {\n      setItems(response.data);\n    });\n  }, []);\n  useEffect(() => {\n    axios.get('https://servicodados.ibge.gov.br/api/v1/localidades/estados/').then(response => {\n      const ufInitials = response.data.map(uf => uf.sigla);\n      setUfs(ufInitials);\n    });\n  }, []);\n  useEffect(() => {\n    //carregar as cidades sempre que a uf mudar\n    if (selectedUf === '0') {\n      return;\n    }\n\n    axios.get(`https://servicodados.ibge.gov.br/api/v1/localidades/estados/${selectedUf}/municipios`).then(response => {\n      const cityNames = response.data.map(city => city.nome);\n      setCities(cityNames);\n    });\n  }, [selectedUf]);\n\n  function handleSelectUf(event) {\n    const uf = event.target.value;\n    setSelectedUf(uf);\n  }\n\n  function handleSelectCity(event) {\n    const city = event.target.value;\n    setSelectedCity(city);\n  }\n\n  function handleInputChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormData({ ...formData,\n      [name]: value\n    });\n  }\n\n  function handleSelectItem(id) {\n    const alreadySelected = selectedItems.findIndex(item => item === id);\n\n    if (alreadySelected >= 0) {\n      const filteredItem = selectedItems.filter(item => item !== id);\n      setSelectedItems(filteredItem);\n    } else {\n      setSelectedItems([...selectedItems, id]);\n    }\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    const {\n      name,\n      email,\n      whatsapp\n    } = formData;\n    const uf = selectedUf;\n    const city = selectedCity;\n    const [latitude, longitude] = selectedPosition;\n    const items = selectedItems;\n    const data = {\n      name,\n      email,\n      whatsapp,\n      uf,\n      city,\n      latitude,\n      longitude,\n      items\n    };\n    await api.post('points', data);\n    alert('Ponto de coleta criado');\n    history.push('/');\n  }\n\n  const Markers = () => {\n    _s();\n\n    const map = useMapEvents({\n      click(e) {\n        setSelectedPosition([e.latlng.lat, e.latlng.lng]);\n      }\n\n    });\n    return selectedPosition ? /*#__PURE__*/_jsxDEV(Marker, {\n      position: selectedPosition,\n      interactive: false\n    }, selectedPosition[0], false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 17\n    }, this) : null;\n  };\n\n  _s(Markers, \"D2AvXN8Rt/r3DPix6IJfcPGmgF0=\", false, function () {\n    return [useMapEvents];\n  });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"page-create-point\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"Ecoleta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: [/*#__PURE__*/_jsxDEV(FiArrowLeft, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this), \"Voltar para home\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Cadastro do \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 33\n        }, this), \" ponto de coleta\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Dados\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Nome da entidade\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            id: \"name\",\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              name: \"email\",\n              id: \"email\",\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"whatsapp\",\n              children: \"Whatsapp\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"whatsapp\",\n              id: \"whatsapp\",\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Endere\\xE7o\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Selecione um endere\\xE7o no mapa\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n          center: initialPosition,\n          zoom: 12.75,\n          children: [/*#__PURE__*/_jsxDEV(Markers, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TileLayer, {\n            attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n            url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Marker, {\n            position: selectedPosition\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"uf\",\n              children: \"Estado (UF)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"uf\",\n              id: \"uf\",\n              value: selectedUf,\n              onChange: handleSelectUf,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"0\",\n                children: \"Selecione uma UF\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 33\n              }, this), ufs.map(uf => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: uf,\n                children: uf\n              }, uf, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 37\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"city\",\n              children: \"Cidade\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"city\",\n              id: \"city\",\n              value: selectedCity,\n              onChange: handleSelectCity,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"0\",\n                children: \"Selecione uma cidade\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 33\n              }, this), cities.map(city => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: city,\n                children: city\n              }, city, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 37\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"\\xCDtens de coleta\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Selecione um ou mais \\xEDtens abaixo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"items-grid\",\n          children: items.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => handleSelectItem(item.id),\n            className: selectedItems.includes(item.id) ? 'selected' : '',\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: item.image_url,\n              alt: item.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: item.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 33\n            }, this)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Cadastrar ponto de coleta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(CreatePoint, \"tf+1VogAFcPAr5tK9mgmDiEs4fs=\", false, function () {\n  return [useHistory];\n});\n\n_c = CreatePoint;\nexport default CreatePoint;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreatePoint\");","map":{"version":3,"sources":["/home/j-dev/Ãrea de Trabalho/RocketSeat/NWL#1.0/web/src/pages/CreatePoint/index.tsx"],"names":["React","useEffect","useState","Link","useHistory","FiArrowLeft","MapContainer","Marker","TileLayer","useMapEvents","axios","api","CreatePoint","items","setItems","ufs","setUfs","cities","setCities","selectedUf","setSelectedUf","selectedCity","setSelectedCity","selectedItems","setSelectedItems","formData","setFormData","name","email","whatsapp","initialPosition","setInitialPosition","selectedPosition","setSelectedPosition","history","navigator","geolocation","getCurrentPosition","position","console","log","get","then","response","data","ufInitials","map","uf","sigla","cityNames","city","nome","handleSelectUf","event","target","value","handleSelectCity","handleInputChange","handleSelectItem","id","alreadySelected","findIndex","item","filteredItem","filter","handleSubmit","preventDefault","latitude","longitude","post","alert","push","Markers","click","e","latlng","lat","lng","logo","includes","image_url","title"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, ChangeEvent, FormEvent } from 'react';\n\nimport { Link, useHistory } from 'react-router-dom';\n\nimport { FiArrowLeft } from 'react-icons/fi';\n\nimport { MapContainer, Marker, TileLayer, useMapEvents  } from 'react-leaflet';\n\nimport { LeafletMouseEvent  } from 'leaflet';\n\nimport axios from 'axios';\n\nimport api from '../../services/api';\n\nimport './styles.css';\n\nimport logo from '../../assets/logo.svg';\n\n//array ou objeto : precisa informar o tipÃ³ da variavel\n\ninterface Item {\n    id: number;\n    title: string;\n    image_url: string;\n}\n\ninterface IBGEUFResponse {\n    sigla: string;\n}\n\ninterface IBGECityResponse {\n    nome: string;\n}\n\nconst CreatePoint = () => {\n    const [items, setItems] = useState<Item[]>([]);\n    const [ufs, setUfs] = useState<string[]>([]);\n    const [cities, setCities] = useState<string[]>([]);\n\n    const [selectedUf, setSelectedUf] = useState('0');\n    const [selectedCity, setSelectedCity] = useState('0'); \n\n    const [selectedItems, setSelectedItems] = useState<number[]>([]);\n\n    const[formData, setFormData] = useState({\n        name:'',\n        email:'',\n        whatsapp:''\n    })\n\n    const [initialPosition, setInitialPosition] = useState<[number, number]>([0,0]);\n    const [selectedPosition, setSelectedPosition] = useState<[number, number]>([0,0]);\n    \n    const history = useHistory();\n\n    useEffect(() => {\n        navigator.geolocation.getCurrentPosition(position => {\n            console.log(position);\n\n        });\n    }, []);\n\n\n    useEffect(() => {\n        api.get('items').then(response => {\n            setItems(response.data);\n        });\n    }, []);\n\n    useEffect(() => {\n        axios.get<IBGEUFResponse[]>('https://servicodados.ibge.gov.br/api/v1/localidades/estados/').then(response => {\n            const ufInitials = response.data.map(uf => uf.sigla)\n            setUfs(ufInitials);\n        });\n    }, []);\n\n    useEffect(() => {\n        //carregar as cidades sempre que a uf mudar\n        if (selectedUf === '0') {\n            return;\n        }\n        axios\n            .get<IBGECityResponse[]>(`https://servicodados.ibge.gov.br/api/v1/localidades/estados/${selectedUf}/municipios`)\n            .then(response => {\n                const cityNames = response.data.map(city => city.nome)\n\n                setCities(cityNames);\n            });\n\n    }, [selectedUf]);\n\n    function handleSelectUf(event: ChangeEvent<HTMLSelectElement>) {\n        const uf = event.target.value;\n        setSelectedUf(uf);\n    }\n    function handleSelectCity(event: ChangeEvent<HTMLSelectElement>) {\n        const city = event.target.value;\n        setSelectedCity(city);\n    }\n    function handleInputChange(event: ChangeEvent<HTMLInputElement>){\n        const {name, value} = event.target;\n\n        setFormData({...formData, [name]:value })\n    }\n    function handleSelectItem (id:number){\n        const alreadySelected = selectedItems.findIndex(item => item ===id);\n\n        if (alreadySelected >=0) {\n            const filteredItem = selectedItems.filter(item=> item !==id);\n            setSelectedItems(filteredItem);\n        }else{\n            setSelectedItems([ ...selectedItems,id]);\n        }\n\n  \n    }\n    async function handleSubmit( event: FormEvent){\n        event.preventDefault();\n        \n        const {name , email, whatsapp} = formData;\n        const uf = selectedUf;\n        const city = selectedCity;\n        const [latitude,longitude] = selectedPosition;\n        const items =selectedItems;\n\n\n        const data={\n            name,\n            email,\n            whatsapp,\n            uf,\n            city,\n            latitude,\n            longitude,\n            items\n        }\n       await api.post('points',data);\n\n       alert('Ponto de coleta criado');\n\n       history.push('/')\n    } \n    const Markers = () => {\n\n        const map = useMapEvents({\n            click(e) {                                \n                setSelectedPosition([\n                    e.latlng.lat,\n                    e.latlng.lng\n                ]);                \n            },            \n        })\n    \n        return (\n            selectedPosition ? \n                <Marker           \n                key={selectedPosition[0]}\n                position={selectedPosition}\n                interactive={false} \n                />\n            : null\n        )   \n        \n    }\n    \n\n\n\n    return (\n        <div id=\"page-create-point\">\n            <header>\n                <img src={logo} alt=\"Ecoleta\" />\n\n                <Link to=\"/\">\n                    <FiArrowLeft />\n                    Voltar para home\n                </Link>\n            </header>\n            <form onSubmit={handleSubmit}>\n                <h1>Cadastro do <br /> ponto de coleta</h1>\n\n                <fieldset>\n                    <legend>\n                        <h2>Dados</h2>\n                    </legend>\n\n                    <div className=\"field\">\n                        <label htmlFor=\"name\">Nome da entidade</label>\n                        <input\n                            type=\"text\"\n                            name=\"name\"\n                            id=\"name\"\n                            onChange={handleInputChange}\n                        />\n                    </div>\n\n                    <div className=\"field-group\">\n                        <div className=\"field\">\n                            <label htmlFor=\"email\">Email</label>\n                            <input\n                                type=\"email\"\n                                name=\"email\"\n                                id=\"email\"\n                                onChange={handleInputChange}\n                            />\n                        </div>\n                        <div className=\"field\">\n                            <label htmlFor=\"whatsapp\">Whatsapp</label>\n                            <input\n                                type=\"text\"\n                                name=\"whatsapp\"\n                                id=\"whatsapp\"\n                                onChange={handleInputChange}\n                            />\n                        </div>\n                    </div>\n\n                </fieldset>\n                <fieldset>\n                    <legend>\n                        <h2>EndereÃ§o</h2>\n                        <span>Selecione um endereÃ§o no mapa</span>\n                    </legend>\n                    \n                    <MapContainer center={initialPosition} zoom={12.75}  >\n                        \n                        <Markers/>\n                        <TileLayer \n                            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                        />\n                        <Marker  position={selectedPosition}  />\n\n                    </MapContainer>\n\n                    <div className=\"field-group\">\n                        <div className=\"field\">\n                            <label htmlFor=\"uf\">Estado (UF)</label>\n                            <select name=\"uf\" id=\"uf\" value={selectedUf} onChange={handleSelectUf}>\n                                <option value=\"0\">Selecione uma UF</option>\n                                {ufs.map(uf => (\n                                    <option key={uf} value={uf}>{uf}</option>\n                                ))}\n                            </select>\n                        </div>\n                        <div className=\"field\">\n                            <label htmlFor=\"city\">Cidade</label>\n                            <select\n                                name=\"city\"\n                                id=\"city\"\n                                value={selectedCity}\n                                onChange={handleSelectCity}\n                            >\n                                <option value=\"0\">Selecione uma cidade</option>\n                                {cities.map(city => (\n                                    <option key={city} value={city}>{city}</option>\n                                ))}\n                            </select>\n                        </div>\n                    </div>\n\n                </fieldset>\n                <fieldset>\n                    <legend>\n                        <h2>Ãtens de coleta</h2>\n                        <span>Selecione um ou mais Ã­tens abaixo</span>\n                    </legend>\n                    <ul className=\"items-grid\">\n                        {items.map(item => (\n                            <li \n                                key={item.id}\n                                onClick={()=> handleSelectItem(item.id)}\n                                className={selectedItems.includes(item.id) ? 'selected' : ''}\n                            >\n                                <img src={item.image_url} alt={item.title} />\n                                <span>{item.title}</span>\n                            </li>\n                        ))}\n                    </ul>\n                </fieldset>\n                <button type=\"submit\" >Cadastrar ponto de coleta</button>\n\n            </form>\n\n\n        </div>\n\n\n    );\n};\n\n\nexport default CreatePoint;\n"]},"metadata":{},"sourceType":"module"}