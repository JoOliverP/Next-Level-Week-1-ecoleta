{"ast":null,"code":"var _jsxFileName = \"/home/j-dev/\\xC1rea de Trabalho/RocketSeat/NWL#1.0/web/src/pages/CreatePoint/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { FiArrowLeft } from 'react-icons/fi';\nimport { MapContainer, Marker, TileLayer } from 'react-leaflet';\nimport axios from 'axios';\nimport api from '../../services/api';\nimport './styles.css';\nimport logo from \"../../assets/logo.svg\"; //array ou objeto : precisa informar o tipÃ³ da variavel\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreatePoint = () => {\n  _s();\n\n  const [items, setItems] = useState([]);\n  const [ufs, setUfs] = useState([]);\n  const [cities, setCities] = useState([]);\n  const [selectedUf, setSelectedUf] = useState('0');\n  const [selectedCity, setSelectedCity] = useState('0');\n  const [initialPosition, setInitialPosition] = useState([0, 0]);\n  const [selectedPosition, setSelectedPosition] = useState([0, 0]);\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(position => {\n      const {\n        latitude,\n        longitude\n      } = position.coords;\n      setInitialPosition([latitude, longitude]);\n    });\n  }, []);\n  useEffect(() => {\n    api.get('items').then(response => {\n      setItems(response.data);\n    });\n  }, []);\n  useEffect(() => {\n    axios.get('https://servicodados.ibge.gov.br/api/v1/localidades/estados/').then(response => {\n      const ufInitials = response.data.map(uf => uf.sigla);\n      setUfs(ufInitials);\n    });\n  }, []);\n  useEffect(() => {\n    //carregar as cidades sempre que a uf mudar\n    if (selectedUf === '0') {\n      return;\n    }\n\n    axios.get(`https://servicodados.ibge.gov.br/api/v1/localidades/estados/${selectedUf}/municipios`).then(response => {\n      const cityNames = response.data.map(city => city.nome);\n      setCities(cityNames);\n    });\n  }, [selectedUf]);\n\n  function handleSelectUf(event) {\n    const uf = event.target.value;\n    setSelectedUf(uf);\n  }\n\n  function handleSelectCity(event) {\n    const city = event.target.value;\n    setSelectedCity(city);\n  }\n\n  function handleMapClick(event) {\n    console.log(event.latlng);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"page-create-point\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"Ecoleta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: [/*#__PURE__*/_jsxDEV(FiArrowLeft, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), \"Voltar para home\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Cadastro do \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 33\n        }, this), \" ponto de coleta\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Dados\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Nome da entidade\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            id: \"name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              name: \"email\",\n              id: \"email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"whatsapp\",\n              children: \"Whatsapp\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"whatsapp\",\n              id: \"whatsapp\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Endere\\xE7o\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Selecione um endere\\xE7o no mapa\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n          center: [-1.4333786, -48.4632341],\n          zoom: 12.75,\n          children: [/*#__PURE__*/_jsxDEV(Markers, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TileLayer, {\n            attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n            url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Marker, {\n            position: [-1.4333786, -48.4632341]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"uf\",\n              children: \"Estado (UF)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"uf\",\n              id: \"uf\",\n              value: selectedUf,\n              whenReady: handleSelectUf,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"0\",\n                children: \"Selecione uma UF\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 33\n              }, this), ufs.map(uf => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: uf,\n                children: uf\n              }, uf, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 37\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"city\",\n              children: \"Cidade\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"city\",\n              id: \"city\",\n              value: selectedCity,\n              onChange: handleSelectCity,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"0\",\n                children: \"Selecione uma cidade\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 33\n              }, this), cities.map(city => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: city,\n                children: city\n              }, city, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 37\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"\\xCDtens de coleta\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Selecione um ou mais \\xEDtens abaixo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"items-grid\",\n          children: items.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: item.image_url,\n              alt: item.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: item.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 33\n            }, this)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Cadastrar ponto de coleta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CreatePoint, \"zAJ7kMJ/3G8o/q4JVPtIWnhE1qY=\");\n\n_c = CreatePoint;\nexport default CreatePoint;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreatePoint\");","map":{"version":3,"sources":["/home/j-dev/Ãrea de Trabalho/RocketSeat/NWL#1.0/web/src/pages/CreatePoint/index.tsx"],"names":["React","useEffect","useState","Link","FiArrowLeft","MapContainer","Marker","TileLayer","axios","api","CreatePoint","items","setItems","ufs","setUfs","cities","setCities","selectedUf","setSelectedUf","selectedCity","setSelectedCity","initialPosition","setInitialPosition","selectedPosition","setSelectedPosition","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","get","then","response","data","ufInitials","map","uf","sigla","cityNames","city","nome","handleSelectUf","event","target","value","handleSelectCity","handleMapClick","console","log","latlng","logo","item","image_url","title","id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, ChangeEvent, ChangeEventHandler } from 'react';\n\nimport { Link } from 'react-router-dom';\n\nimport { FiArrowLeft } from 'react-icons/fi';\n\nimport { MapContainer, Marker, TileLayer, useMapEvents  } from 'react-leaflet';\n\nimport { LeafletMouseEvent  } from 'leaflet';\n\nimport axios from 'axios';\n\nimport api from '../../services/api';\n\nimport './styles.css';\n\nimport logo from '../../assets/logo.svg';\n\n//array ou objeto : precisa informar o tipÃ³ da variavel\n\ninterface Item {\n    id: number;\n    title: string;\n    image_url: string;\n}\n\ninterface IBGEUFResponse {\n    sigla: string;\n}\n\ninterface IBGECityResponse {\n    nome: string;\n}\n\nconst CreatePoint = () => {\n    const [items, setItems] = useState<Item[]>([]);\n    const [ufs, setUfs] = useState<string[]>([]);\n    const [cities, setCities] = useState<string[]>([]);\n\n    const [selectedUf, setSelectedUf] = useState('0');\n    const [selectedCity, setSelectedCity] = useState('0');\n\n    const [initialPosition, setInitialPosition] = useState<[number, number]>([0,0]);\n    const [selectedPosition, setSelectedPosition] = useState<[number, number]>([0,0]);\n\n    useEffect(() => {\n        navigator.geolocation.getCurrentPosition(position => {\n            const { latitude, longitude } = position.coords;\n            setInitialPosition([latitude, longitude]);\n\n        });\n    }, []);\n\n\n    useEffect(() => {\n        api.get('items').then(response => {\n            setItems(response.data);\n        });\n    }, []);\n\n    useEffect(() => {\n        axios.get<IBGEUFResponse[]>('https://servicodados.ibge.gov.br/api/v1/localidades/estados/').then(response => {\n            const ufInitials = response.data.map(uf => uf.sigla)\n            setUfs(ufInitials);\n        });\n    }, []);\n\n    useEffect(() => {\n        //carregar as cidades sempre que a uf mudar\n        if (selectedUf === '0') {\n            return;\n        }\n        axios\n            .get<IBGECityResponse[]>(`https://servicodados.ibge.gov.br/api/v1/localidades/estados/${selectedUf}/municipios`)\n            .then(response => {\n                const cityNames = response.data.map(city => city.nome)\n\n                setCities(cityNames);\n            });\n\n    }, [selectedUf]);\n\n    function handleSelectUf(event: ChangeEvent<HTMLSelectElement>) {\n        const uf = event.target.value;\n        setSelectedUf(uf);\n    }\n    function handleSelectCity(event: ChangeEvent<HTMLSelectElement>) {\n        const city = event.target.value;\n        setSelectedCity(city);\n    }\n    function handleMapClick( event: LeafletMouseEvent) {\n        console.log(event.latlng)\n    }\n\n    return (\n        <div id=\"page-create-point\">\n            <header>\n                <img src={logo} alt=\"Ecoleta\" />\n\n                <Link to=\"/\">\n                    <FiArrowLeft />\n                    Voltar para home\n                </Link>\n            </header>\n            <form>\n                <h1>Cadastro do <br /> ponto de coleta</h1>\n\n                <fieldset>\n                    <legend>\n                        <h2>Dados</h2>\n                    </legend>\n\n                    <div className=\"field\">\n                        <label htmlFor=\"name\">Nome da entidade</label>\n                        <input\n                            type=\"text\"\n                            name=\"name\"\n                            id=\"name\"\n                        />\n                    </div>\n\n                    <div className=\"field-group\">\n                        <div className=\"field\">\n                            <label htmlFor=\"email\">Email</label>\n                            <input\n                                type=\"email\"\n                                name=\"email\"\n                                id=\"email\"\n                            />\n                        </div>\n                        <div className=\"field\">\n                            <label htmlFor=\"whatsapp\">Whatsapp</label>\n                            <input\n                                type=\"text\"\n                                name=\"whatsapp\"\n                                id=\"whatsapp\"\n                            />\n                        </div>\n                    </div>\n\n                </fieldset>\n                <fieldset>\n                    <legend>\n                        <h2>EndereÃ§o</h2>\n                        <span>Selecione um endereÃ§o no mapa</span>\n                    </legend>\n\n                    <MapContainer center={[-1.4333786, -48.4632341]} zoom={12.75}  >\n                        <Markers/>\n                        <TileLayer \n                            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                        />\n                        <Marker  position={[-1.4333786, -48.4632341]}  />\n\n                    </MapContainer>\n\n                    <div className=\"field-group\">\n                        <div className=\"field\">\n                            <label htmlFor=\"uf\">Estado (UF)</label>\n                            <select name=\"uf\" id=\"uf\" value={selectedUf} whenReady={handleSelectUf}>\n                                <option value=\"0\">Selecione uma UF</option>\n                                {ufs.map(uf => (\n                                    <option key={uf} value={uf}>{uf}</option>\n                                ))}\n                            </select>\n                        </div>\n                        <div className=\"field\">\n                            <label htmlFor=\"city\">Cidade</label>\n                            <select\n                                name=\"city\"\n                                id=\"city\"\n                                value={selectedCity}\n                                onChange={handleSelectCity}\n                            >\n                                <option value=\"0\">Selecione uma cidade</option>\n                                {cities.map(city => (\n                                    <option key={city} value={city}>{city}</option>\n                                ))}\n                            </select>\n                        </div>\n                    </div>\n\n                </fieldset>\n                <fieldset>\n                    <legend>\n                        <h2>Ãtens de coleta</h2>\n                        <span>Selecione um ou mais Ã­tens abaixo</span>\n                    </legend>\n                    <ul className=\"items-grid\">\n                        {items.map(item => (\n                            <li key={item.id}>\n                                <img src={item.image_url} alt={item.title} />\n                                <span>{item.title}</span>\n                            </li>\n                        ))}\n                    </ul>\n                </fieldset>\n                <button type=\"submit\" >Cadastrar ponto de coleta</button>\n\n            </form>\n\n\n        </div>\n\n\n    );\n};\n\n\nexport default CreatePoint;\n"]},"metadata":{},"sourceType":"module"}